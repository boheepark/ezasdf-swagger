{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "Users Service",
    "description": "Swagger spec for documenting the users service"
  },
  "host": "192.168.99.100",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/users": {
      "get": {
        "description": "Returns all users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched users",
          }
        }
      },
      "post": {
        "description": "Adds a new user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User added"
          },
          "201": {
            "description": "Successfully added user"
          },
          "400": {
            "description": "Invalid payload"
          },
          "401": {
            "description": "You do not have permission to do that"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Returns a user based on a single user ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "description": "Creates a new user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user object"
          },
          "201": {
            "description": "Successfully signed up"
          },
          "400": {
            "description": "Invalid payload"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "description": "Signs a user in",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to sign in",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully signed in"
          },
          "400": {
            "description": "Invalid payload"
          },
          "404": {
            "description": "User does not exist"
          },
          "500": {
            "description": "Try again"
          }
        }
      }
    },
    "/auth/signout": {
      "get": {
        "description": "Signs a user out",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully signed out"
          },
          "401": {
            "description": "Something went wrong"
          },
          "403": {
            "description": "Provide a valid token"
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "description": "Returns the signed in user's profile",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched user profile"
          },
          "401": {
            "description": "Something went wrong"
          },
          "403": {
            "description": "Provide a valid token"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}
